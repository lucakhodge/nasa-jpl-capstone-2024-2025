name: CI

on:
  push:         { branches: [ main ] }
  pull_request: { branches: [ main ] }

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        submodules: recursive

    # ── Install dependencies ────────────────────────────────────
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          g++ cmake git \
          gdal-bin libgdal-dev \
          libtiff5-dev nlohmann-json3-dev

    - name: Bootstrap vcpkg & install deps on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        cd vcpkg
        .\bootstrap-vcpkg.bat -disableMetrics
        # install all ports in one invocation (PowerShell-friendly)
        .\vcpkg.exe install gdal:x64-windows libtiff:x64-windows nlohmann-json:x64-windows
        .\vcpkg.exe integrate install

    # ── Configure CMake ────────────────────────────────────────
    - name: Configure on Linux
      if: runner.os == 'Linux'
      run: cmake -S mempa/algorithm -B build -DCMAKE_BUILD_TYPE=Release

    - name: Configure on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: cmake -S mempa/algorithm -B build -A x64 `
           -DCMAKE_BUILD_TYPE=Release `
           -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake

    # ── Build everything ───────────────────────────────────────
    - name: Build on Linux
      if: runner.os == 'Linux'
      run: cmake --build build --parallel

    - name: Build on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: cmake --build build --config Release --parallel

    # ── Download test DEM ──────────────────────────────────────
    - name: Download Mars DEM .tif
      run: |
        mkdir -p mempa/algorithm/tests
        curl -L \
          https://planetarymaps.usgs.gov/mosaic/Mars/THEMIS_controlled_mosaics/SinusSabaeus_DayIR_31Jan2014/THEMIS_DayIR_ControlledMosaic_SinusSabaeus_30S00E_100mpp.tif \
          -o mempa/algorithm/tests/mars_dem.tif

    # ── Run tests ──────────────────────────────────────────────
    - name: Run unit tests on Linux
      if: runner.os == 'Linux'
      run: ctest --test-dir build --output-on-failure
      env:
        PRINT_OUTPUT: "false"

    - name: Run unit tests on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: ctest --test-dir build -C Release --output-on-failure
      env:
        PRINT_OUTPUT: "false"

    # ── Clean up ───────────────────────────────────────────────
    - name: Clean build directory on Linux
      if: runner.os == 'Linux'
      run: cmake --build build --target clean

    - name: Clean build directory on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: cmake --build build --config Release --target clean
